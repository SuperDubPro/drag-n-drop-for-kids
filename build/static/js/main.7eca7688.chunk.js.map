{"version":3,"sources":["project-config.js","components/Draggable/index.jsx","components/Droppable/index.jsx","components/Body.jsx","App.js","index.js"],"names":["DATA","scheme","text","Draggable","uuid","onDragStart","onDrag","onDragEnd","className","coordinates","leftCorrection","topCorrection","pageHeight","pageWidth","clientHeight","clientWidth","draggableClone","privElemBelow","clearState","remove","copyComputedStyle","elem","clone","computedStyle","style","currentStyle","document","defaultView","getComputedStyle","getRealStyle","Object","keys","forEach","key","realStyle","test","fontSize","e","Error","handleStart","touch","draggable","currentTarget","click","clickEvent","documentElement","cloneStyle","cloneNode","box","getBoundingClientRect","clientX","left","clientY","top","id","position","pointerEvents","zIndex","opacity","pageX","pageY","body","append","Math","max","scrollHeight","offsetHeight","scrollWidth","offsetWidth","window","innerHeight","innerWidth","cloneElem","scrollZonePx","elemsBelow","elementsFromPoint","scrollY","scrollBy","abs","scrollX","cloneIndex","findIndex","splice","some","element","classList","contains","isOverflown","elemBox","bottom","right","dragScroll","handleTouchStart","changedTouches","handleTouchMove","cancelable","preventDefault","elemBelow","elementFromPoint","isPrivDroppable","dragEnterEvent","Event","substring","dispatchEvent","dragOverEvent","dragLeaveEvent","handleMove","handleTouchEnd","target","matches","event","handleEnd","handleTouchCancel","handleCancel","useEffect","getElementById","addEventListener","removeEventListener","defaultProps","random","toString","Droppable","onDragOver","onDrop","onDragEnter","onDragLeave","handleTouchDrop","handleDragOver","handleDragEnter","handleDragLeave","droppable","Body","React","useState","Map","map","item","index","genUuid","name","isDragOver","isDragging","droppedUuid","mState","setState","changeStateIteration","func","prevState","cardState","array","newArr","i","length","randomIndex","floor","getShuffledArr","cardsOrder","cards","setCards","draggingUuidRef","useRef","handleDragStart","useCallback","current","setTimeout","state","handleDrop","dropUuid","prevCard","filter","cardUuid","handleDragEnd","get","createDroppable","createDraggable","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7eca7688.chunk.js","sourcesContent":["const DATA = {\n  scheme: [\n    { text: 'Разработка программы внутренних аудитов' },\n    { text: 'Формирование плана аудита' },\n    { text: 'Разработка чек-листа' },\n    { text: 'Проведение внутреннего аудита на месте' },\n    { text: 'Анализ документированной информации' }\n    // { text: 'Оформление результатов внутреннего аудита. Формирование отчета о проведении внутреннего аудита' },\n    // { text: 'Согласование и утверждение отчета по внутреннему аудиту и его рассылка' },\n    // { text: 'Завершение аудита' },\n    // {\n    //   name: 'В случае выявления несоответствий',\n    //   text: 'Формирование плана по выполнению коррекций и корректирующих действий'\n    // },\n    // { text: 'Устранение несоответствий, реализация корректирующих действий' },\n    // { text: 'Проверка устранения несоответствий при последующем внутреннем аудите' }\n  ]\n};\n\nexport default DATA;\n","import './draggable.scss';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nfunction Draggable({ text, uuid, onDragStart, onDrag, onDragEnd, className }) {\n  const coordinates = {\n    leftCorrection: 0,\n    topCorrection: 0,\n    pageHeight: 0,\n    pageWidth: 0,\n    clientHeight: 0,\n    clientWidth: 0\n  };\n  let draggableClone = null;\n  let privElemBelow = null;\n\n  const clearState = () => {\n    if (draggableClone) { draggableClone.remove(); }\n    draggableClone = null;\n    privElemBelow = null;\n    coordinates.leftCorrection = 0;\n    coordinates.topCorrection = 0;\n    coordinates.pageHeight = 0;\n    coordinates.pageWidth = 0;\n    coordinates.clientHeight = 0;\n    coordinates.clientWidth = 0;\n  };\n\n  const getRealStyle = (elem, style) => {\n    let computedStyle;\n    if (typeof elem.currentStyle !== 'undefined') {\n      computedStyle = elem.currentStyle;\n    } else {\n      computedStyle = document.defaultView.getComputedStyle(elem, null);\n    }\n\n    return style ? computedStyle[style] : computedStyle;\n  };\n\n  const copyComputedStyle = (elem, clone) => {\n    const computedStyle = getRealStyle(elem);\n    Object.keys(computedStyle).forEach(key => {\n      const realStyle = computedStyle[key];\n      // Do not use `hasOwnProperty`, nothing will get copied\n      if (\n        typeof computedStyle[realStyle] === 'string'\n        && computedStyle[realStyle]\n        && realStyle !== 'cssText'\n        && !/\\d/.test(realStyle)\n      ) {\n        try {\n          clone.style[realStyle] = computedStyle[realStyle];\n          // `fontSize` comes before `font` If `font` is empty, `fontSize` gets\n          // overwritten.  So make sure to reset this property. (hackyhackhack)\n          // Other properties may need similar treatment\n          if (realStyle === 'font') {\n            clone.style.fontSize = computedStyle.fontSize;\n          }\n        } catch (e) {\n          throw (new Error(`Ошибка при клонировании стиля ${e}`));\n        }\n      }\n    });\n  };\n\n  const isOverflown = (element) => {\n    const { classList } = element;\n    return classList.contains('overflow-auto') || classList.contains('overflow-auto-x') || classList.contains('overflow-auto-y');\n  };\n\n  const dragScroll = (e) => {\n    const scrollZonePx = 25;\n    const elemsBelow = document.elementsFromPoint(e.clientX, e.clientY);\n\n    // TODO Исправить баг: если при портретной ориентации завести draggable элемент за правый край, то при перетаскивании вправо будет происходить скрол вверх (без срабатывания логики ниже). WTF???!!\n    if (\n      window.scrollY + coordinates.clientHeight < coordinates.pageHeight\n      && e.clientY >= (coordinates.clientHeight - scrollZonePx)\n      && e.pageY <= coordinates.pageHeight\n    ) {\n      // page down\n      window.scrollBy(0, (e.clientY - (coordinates.clientHeight - scrollZonePx)) * 2);\n    } else if (window.scrollY > 0 && e.clientY <= scrollZonePx && e.pageY >= 0) {\n      // page up\n      window.scrollBy(0, -Math.abs(scrollZonePx - Math.abs(e.clientY)) * 2);\n    } else if (\n      window.scrollX + coordinates.clientWidth < coordinates.pageWidth\n      && e.clientX >= (coordinates.clientWidth - scrollZonePx)\n      && e.clientX <= coordinates.pageWidth\n    ) {\n      // page right\n      window.scrollBy((e.clientX - (coordinates.clientWidth - scrollZonePx)) * 2, 0);\n    } else if (window.scrollX > 0 && e.clientX <= scrollZonePx && e.pageX >= 0) {\n      // page left\n      window.scrollBy(-Math.abs(scrollZonePx - Math.abs(e.clientX)) * 2, 0);\n    } else if (elemsBelow) {\n      const cloneIndex = elemsBelow.findIndex(elem => elem.id === `clone-${uuid}`);\n      elemsBelow.splice(0, cloneIndex + 1);\n\n      elemsBelow.some(elem => {\n        if (isOverflown(elem)) {\n          const elemBox = elem.getBoundingClientRect();\n          // overflown element up\n          if (e.clientY <= elemBox.top + scrollZonePx && e.clientY > elemBox.top && e.pageY >= 0) {\n            elem.scrollBy(0, -Math.abs(elemBox.top + scrollZonePx - Math.abs(e.clientY)) * 2);\n          }\n          // overflown element down\n          if (e.clientY >= elemBox.bottom - scrollZonePx && e.clientY <= elemBox.bottom && e.pageY <= coordinates.pageHeight) {\n            elem.scrollBy(0, (e.clientY - (elemBox.bottom - scrollZonePx)) * 2);\n          }\n          // overflown element left\n          if (e.clientX <= elemBox.left + scrollZonePx && e.clientX > elemBox.left && e.pageX >= 0) {\n            elem.scrollBy(-Math.abs(elemBox.left + scrollZonePx - e.clientX) * 2, 0);\n          }\n          // overflown element right\n          if (e.clientX >= elemBox.right - scrollZonePx && e.clientX <= elemBox.right && e.pageX <= coordinates.pageWidth) {\n            elem.scrollBy((e.clientX - (elemBox.right - scrollZonePx)) * 2, 0);\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  };\n\n  const handleCancel = (e) => {\n    if (e.cancelable) { e.preventDefault(); }\n    clearState();\n\n    onDragEnd(e);\n  };\n\n  const handleMove = (e, touch) => {\n    if (e.cancelable) { e.preventDefault(); }\n\n    const click = touch || e;\n    const cloneStyle = draggableClone.style;\n    const elemBelow = document.elementFromPoint(click.clientX, click.clientY);\n    const isPrivDroppable = privElemBelow?.classList.contains('droppable');\n\n    if (elemBelow?.classList.contains('droppable')) {\n      if (!isPrivDroppable) {\n        const dragEnterEvent = new Event(`custom-dragenter-${elemBelow.id.substring(10)}`);\n        elemBelow.dispatchEvent(dragEnterEvent);\n      }\n\n      const dragOverEvent = new Event(`custom-dragover-${elemBelow.id.substring(10)}`);\n      elemBelow.dispatchEvent(dragOverEvent);\n    } else if (isPrivDroppable) {\n      const dragLeaveEvent = new Event(`custom-dragleave-${privElemBelow.id.substring(10)}`);\n      privElemBelow.dispatchEvent(dragLeaveEvent);\n    }\n\n    privElemBelow = elemBelow;\n\n    cloneStyle.position = 'absolute';\n    cloneStyle.left = `${click.pageX - coordinates.leftCorrection}px`;\n    cloneStyle.top = `${click.pageY - coordinates.topCorrection}px`;\n  };\n\n  const handleEnd = (e, touch) => {\n    clearState();\n    const click = touch || e;\n\n    if (!e.target.matches('button:not([disabled]), [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')) {\n      if (e.cancelable) { e.preventDefault(); }\n      const elemBelow = document.elementFromPoint(click.clientX, click.clientY);\n\n      if (elemBelow?.classList.contains('droppable')) {\n        const event = new Event(`custom-drop-${elemBelow.id.substring(10)}`);\n        elemBelow.dispatchEvent(event);\n      }\n    }\n\n    onDragEnd(e);\n  };\n\n  const cloneElem = (elem, clickEvent) => {\n    const { documentElement } = document;\n    draggableClone = elem.cloneNode(true);\n    const cloneStyle = draggableClone.style;\n    const box = elem.getBoundingClientRect();\n\n    coordinates.leftCorrection = clickEvent.clientX - box.left;\n    coordinates.topCorrection = clickEvent.clientY - box.top;\n\n    draggableClone.id = `clone-${uuid}`;\n    draggableClone.draggable = true;\n\n    copyComputedStyle(elem, draggableClone);\n\n    cloneStyle.position = 'absolute';\n    cloneStyle.pointerEvents = 'none';\n    cloneStyle.zIndex = 1020;\n    cloneStyle.opacity = 0.5;\n    cloneStyle.left = `${clickEvent.pageX - coordinates.leftCorrection}px`;\n    cloneStyle.top = `${clickEvent.pageY - coordinates.topCorrection}px`;\n\n    document.body.append(draggableClone);\n\n    coordinates.pageHeight = Math.max(\n      document.body.scrollHeight, documentElement.scrollHeight,\n      document.body.offsetHeight, documentElement.offsetHeight,\n      document.body.clientHeight, documentElement.clientHeight\n    );\n    coordinates.pageWidth = Math.max(\n      document.body.scrollWidth, documentElement.scrollWidth,\n      document.body.offsetWidth, documentElement.offsetWidth,\n      document.body.clientWidth, documentElement.clientWidth\n    );\n    coordinates.clientHeight = Math.max(window.innerHeight, documentElement.clientHeight);\n    coordinates.clientWidth = Math.max(window.innerWidth, documentElement.clientWidth);\n  };\n\n  const handleStart = (e, touch) => {\n    const draggable = e.currentTarget;\n    const click = touch || e;\n\n    if (!draggableClone) { cloneElem(draggable, click); }\n    dragScroll(click);\n\n    onDragStart(e);\n  };\n\n  const handleDragStart = (e) => { onDragStart(e); };\n  const handleDrag = (e) => { onDrag(e); };\n  const handleDragEnd = (e) => { onDragEnd(e); };\n\n  const handleTouchStart = (e) => { handleStart(e, e.changedTouches[0]); };\n  const handleTouchMove = (e) => { handleMove(e, e.changedTouches[0]); };\n  const handleTouchEnd = (e) => { handleEnd(e, e.changedTouches[0]); };\n  const handleTouchCancel = (e) => { handleCancel(e); };\n\n  useEffect(() => {\n    const draggable = document.getElementById(`draggable-${uuid}`);\n    draggable.addEventListener('touchstart', handleTouchStart);\n    draggable.addEventListener('touchmove', handleTouchMove);\n    draggable.addEventListener('touchend', handleTouchEnd);\n    draggable.addEventListener('touchcancel', handleTouchCancel);\n\n    return () => {\n      draggable.removeEventListener('touchstart', handleTouchStart);\n      draggable.removeEventListener('touchmove', handleTouchMove);\n      draggable.removeEventListener('touchend', handleTouchEnd);\n      draggable.removeEventListener('touchcancel', handleTouchCancel);\n    };\n  }, []);\n\n  return (\n    <div\n      className={`interactive draggable ${className} p-2 m-2`}\n      draggable=\"true\"\n      id={`draggable-${uuid}`}\n      onDragStart={handleDragStart}\n      onDrag={handleDrag}\n      onDragEnd={handleDragEnd}\n    >\n      {text}\n    </div>\n  );\n}\n\nDraggable.propTypes = {\n  text: PropTypes.string,\n  uuid: PropTypes.string,\n  className: PropTypes.string,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func\n};\n\nDraggable.defaultProps = {\n  text: '',\n  uuid: Math.random().toString(),\n  className: '',\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {}\n};\n\nexport default Draggable;\n","import './droppable.scss';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nfunction Droppable({ uuid, text, onDragOver, onDrop, onDragEnter, onDragLeave, className }) {\n  const handleTouchDrop = (e) => {\n    onDrop(e);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    onDragOver(e);\n  };\n\n  const handleDrop = (e) => {\n    onDrop(e);\n  };\n\n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    onDragEnter(e);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    onDragLeave(e);\n  };\n\n  useEffect(() => {\n    const droppable = document.getElementById(`droppable-${uuid}`);\n    droppable.addEventListener(`custom-drop-${uuid}`, handleTouchDrop);\n    droppable.addEventListener(`custom-dragover-${uuid}`, handleDragOver);\n    droppable.addEventListener(`custom-dragenter-${uuid}`, handleDragEnter);\n    droppable.addEventListener(`custom-dragleave-${uuid}`, handleDragLeave);\n\n    return () => {\n      droppable.removeEventListener(`custom-drop-${uuid}`, handleTouchDrop);\n      droppable.removeEventListener(`custom-dragover-${uuid}`, handleDragOver);\n      droppable.removeEventListener(`custom-dragenter-${uuid}`, handleDragEnter);\n      droppable.removeEventListener(`custom-dragleave-${uuid}`, handleDragLeave);\n    };\n  }, []);\n\n  return (\n    <div\n      className={`interactive droppable ${className} p-2 m-2`}\n      id={`droppable-${uuid}`}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"text\">{text}</div>\n    </div>\n  );\n}\n\nDroppable.propTypes = {\n  text: PropTypes.string,\n  uuid: PropTypes.string,\n  className: PropTypes.string,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDrop: PropTypes.func\n};\n\nDroppable.defaultProps = {\n  text: '',\n  uuid: Math.random().toString(),\n  className: '',\n  onDragEnter: () => {},\n  onDragOver: () => {},\n  onDragLeave: () => {},\n  onDrop: () => {}\n};\n\nexport default Droppable;\n","import { v1 as genUuid } from 'uuid';\nimport React from 'react';\nimport DATA from '../project-config';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\n\nconst { scheme } = DATA;\n\nconst getShuffledArr = (array) => {\n  const newArr = [...array];\n\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[randomIndex]] = [newArr[randomIndex], newArr[i]];\n  }\n\n  return newArr;\n};\n\nfunction Body() {\n  /** set mState */\n  const [mState, setState] = React.useState(() => new Map(scheme.map((item, index) => {\n    const uuid = genUuid();\n    return [uuid, {\n      uuid,\n      text: item.text,\n      name: item.name,\n      isDragOver: false,\n      isDragging: false,\n      droppedUuid: '',\n      index\n    }];\n  })));\n\n  const changeStateIteration = (func) => {\n    setState(prevState => new Map([...prevState].map(([id, cardState]) => {\n      func(id, cardState);\n      return [id, cardState];\n    })));\n  };\n\n  /** set cardsOrder and cards */\n  const [cardsOrder] = React.useState(() => getShuffledArr([...mState].map(([uuid]) => uuid)));\n  const [cards, setCards] = React.useState(() => [...cardsOrder]);\n  const draggingUuidRef = React.useRef(null);\n\n  /** set handlers */\n  const handleDragStart = React.useCallback((e, uuid) => {\n    draggingUuidRef.current = uuid;\n    setTimeout(() => changeStateIteration((id, state) => {\n      state.isDragging = id === uuid;\n    }), 0);\n  }, []);\n\n  const handleDrop = React.useCallback((e, dropUuid) => {\n    // console.log(e.currentTarget);\n    const droppedUuid = draggingUuidRef.current;\n    setCards(prevCard => prevCard.filter(cardUuid => cardUuid !== droppedUuid));\n    changeStateIteration((cardUuid, state) => {\n      state.isDragOver = false;\n      state.isDragging = false;\n      if (cardUuid === dropUuid) {\n        state.droppedUuid = droppedUuid;\n      } else {\n        state.droppedUuid = state.droppedUuid === droppedUuid ? '' : state.droppedUuid;\n      }\n    });\n  }, []);\n\n  const handleDragEnd = React.useCallback(() => {\n    draggingUuidRef.current = null;\n    changeStateIteration((id, state) => {\n      state.isDragging = false;\n    });\n  }, []);\n\n  const handleDragEnter = React.useCallback((e, uuid) => {\n    changeStateIteration((id, state) => {\n      state.isDragOver = id === uuid;\n    });\n  }, []);\n\n  const handleDragLeave = React.useCallback(() => {\n    changeStateIteration((id, state) => {\n      state.isDragOver = false;\n    });\n  }, []);\n\n  /** create some jsx elements */\n  const createDroppable = (state) => {\n    const { uuid, droppedUuid, isDragOver } = state;\n\n    //  {(!state.droppedUuid || mState.get(state.droppedUuid).isDragging)\n    return (\n      <div\n        className=\"interactive-container\"\n        key={`droppable-container-${uuid}`}\n      >\n        {!state.droppedUuid\n          ? (\n            <Droppable\n              uuid={uuid}\n              key={`droppable-component-${uuid}`}\n              className={`border-dashed ${isDragOver ? 'hovered' : ''}`}\n              onDrop={(e) => { handleDrop(e, uuid); }}\n              onDragEnter={(e) => { handleDragEnter(e, uuid); }}\n              onDragLeave={(e) => { handleDragLeave(e, uuid); }}\n            />\n          )\n          : (\n            <Draggable\n              uuid={droppedUuid}\n              key={`selected-card-${droppedUuid}`}\n              text={mState.get(droppedUuid).text}\n              className={mState.get(droppedUuid).isDragging ? 'hidden' : ''}\n              onDragStart={(e) => { handleDragStart(e, droppedUuid); }}\n              onDragEnd={(e) => { handleDragEnd(e, droppedUuid); }}\n            />\n          )}\n      </div>\n    );\n  };\n\n  const createDraggable = (state) => {\n    const { uuid } = state;\n\n    return (\n      <div\n        className=\"interactive-container\"\n        key={`draggable-container-${uuid}`}\n      >\n        <Draggable\n          uuid={uuid}\n          key={`draggable-component-${uuid}`}\n          text={state.text}\n          className={state.isDragging ? 'hidden' : ''}\n          onDragStart={(e) => { handleDragStart(e, uuid); }}\n          onDragEnd={(e) => { handleDragEnd(e, uuid); }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"lists-container\">\n        <div className=\"interactive-list mb-3\">\n          {[...mState].map(([, state]) => createDroppable(state))}\n        </div>\n\n        <div className=\"interactive-list\">\n          {cards.map(uuid => {\n            const card = mState.get(uuid);\n            return createDraggable(card);\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","// import './App.css';\nimport './style/app.scss';\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}